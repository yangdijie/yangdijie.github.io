<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo搭建博客</title>
    <url>/2022/02/02/2022%E5%B9%B42%E6%9C%882%E6%97%A5-hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>2022年2月2日    用 Hexo 搭建博客</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public static voim main(String []args)&#123;</span><br><span class="line">	System.out.println(&quot;Hello,World!&quot;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<p>这会是一篇很长的教程。其实，介绍 Hexo 在 Github 上搭建博客的教程汗牛充栋，之所以还要继续这一项重复的工作，主要是我心中对理想的技术博客文章有两点期盼：</p>
<ul>
<li>技术博客不仅仅是操作手册，不仅要告诉读者如何做，还要告诉读者为何要这么做；</li>
<li>消除神秘性，在博客文章中给出的信息都应该提供参考资料，且最好是官方文档，信息的准确性不会经过 N 手转述而打折。</li>
</ul>
<h2 id="1-动手前的思考"><a href="#1-动手前的思考" class="headerlink" title="1. 动手前的思考"></a>1. 动手前的思考</h2><p>在看这篇文章之前，也许你已经看过不少关于 Hexo 和 Github 搭建博客的文章了，那你肯定见过这些：Hexo、Github Pages、SSH 配置、域名解析、A 记录、CNAME。这些究竟是什么东西？一下子都灌输给我，头好晕。别担心，这一章就是先帮我们理清思路的。</p>
<h3 id="1-1-模块划分"><a href="#1-1-模块划分" class="headerlink" title="1.1 模块划分"></a>1.1 模块划分</h3><p>上面提到的 Hexo、Github Pages、SSH 配置、域名解析、A 记录、CNAME，那么多名词，都是由完全不认识的人创造、负责管理的，所以每个名词所代表的背后的服务之间的耦合度是非常低的。这里，我根据访问网址的不同，将利用 Hexo 和 Github Pages 搭建博客的流程一共分为如下 3 大模块：</p>
<ul>
<li><strong>Hexo 本地建站：</strong>这一模块利用 Hexo 在本地（你的电脑）内生成你的网站，可以通过 <a href="http://localhost:4000/">http://localhost:4000/</a> 来查看最后生成的网站；</li>
<li><strong>部署到 Github Pages：</strong>这一模块介绍 Github Pages 服务以及利用 Hexo 将上一模块中生成的网站部署到 Github 服务器，从而可以通过 your_name.github.io 访问你新建的博客。其中，your_name 是你 Github 的用户名；</li>
<li><strong>绑定独立域名：</strong>这一模块介绍如何绑定自己购买的独立域名，从而可以通过自己购买的网址访问自己的网站，如果没有购买独立域名的打算，这一模块可以不用进行。</li>
</ul>
<h3 id="1-2-关键词解释"><a href="#1-2-关键词解释" class="headerlink" title="1.2 关键词解释"></a>1.2 关键词解释</h3><p>Hexo、Github Pages、SSH 配置、域名解析、A 记录、CNAME 这些名词究竟代表了什么？为了不至于在后面的操作阶段懵逼，这里，我们先来打点预防针。</p>
<ul>
<li><strong>Hexo：</strong>Hexo 是一款静态博客生成器。静态的意思是指生成的博客网站访客只能浏览，没法像淘宝那样在我们的网站上提交信息。Hexo 负责把我们写的 Markdown 文件根据选定的主题（规定网站的外观样式的文件）生成一堆 HTML 以及负责外观样式的 CSS 和 Javascript 文件。此外，Hexo 还提供了帮我们把这一堆 HTML、CSS、Javascript 文件上传到 Github 服务器的功能，也就是部署。</li>
<li><strong>Github Page：</strong>我们平时在新浪上看新闻的时候，所有的东西都要从新浪服务器发送到我们的手机、电脑上。我们的网站也一样，需要一个服务器，把用 Hexo 生成的那些 HTML、CSS、Javascript 文件发送给访客。但我们自己没有服务器呀？Github Pages 是 Github 提供的一项免费的静态页面托管服务，提供 your_name.github.io 的域名（your_name 为你的 Github 用户名）发布自己的静态网站。我们把 Hexo 生成的内容上传到 Github 服务器，访客的浏览器就是从 Github 服务器获取相关文件的。</li>
</ul>
<h2 id="2-Hexo-本地建站"><a href="#2-Hexo-本地建站" class="headerlink" title="2. Hexo 本地建站"></a>2. Hexo 本地建站</h2><h3 id="2-1-安装-Hexo"><a href="#2-1-安装-Hexo" class="headerlink" title="2.1 安装 Hexo"></a>2.1 安装 Hexo</h3><p>根据 Hexo 的官方文档 <a href="https://hexo.io/zh-cn/docs/index.html">开始使用 — 概述</a>，安装 Hexo 的前提是先安装 <a href="https://nodejs.org/zh-cn/">Node.js</a> 和 <a href="https://git-scm.com/download">Git</a>，再安装完这两者后，安装 Hexo 很简单，只需在终端（cmd、Git bash、Node.js command prompt 均可）中敲入如下命令，回车等待安装完成。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<h3 id="2-2-建立站点"><a href="#2-2-建立站点" class="headerlink" title="2.2 建立站点"></a>2.2 建立站点</h3><ul>
<li><p><strong>Step 1:</strong> 先在电脑中的某一位置建立好 <code>your_name.github.io</code> 文件夹，比如 <code>D:\Blog\your_name.github.io</code>；</p>
</li>
<li><p><strong>Step 2:</strong> 在终端中切换到 <code>your_name.github.io</code> 文件夹所在的路径。需要注意的是，在 Windows 中，如果要进入某个磁盘，不需要敲 <code>cd</code>，直接敲盘符即可。比如我要进入 <code>D:\Blog\your_name.github.io</code>，那就输入 <code>D:</code> 回车，然后再 <code>cd Blog\your_name.github.io</code>；</p>
</li>
<li><p><strong>Step 3:</strong> 由于默认的 NPM 镜像实在太慢太慢，我们把源替换成淘宝的镜像，在终端中执行如下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm config set registry &quot;https://registry.npm.taobao.org&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>Step 4:</strong> 根据 Hexo 的官方文档 <a href="https://hexo.io/zh-cn/docs/setup.html">开始使用 — 建站</a>，依次执行下面两条命令，建立我们的新网站：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

<p>换了淘宝的镜像后，应该能在几分钟内完成。完成后，<code>your_name.github.io</code> 文件夹下面的目录如下：</p>
<p><strong>其他没有的文件夹由于版本更新，尚未完全去了解，有需求的可自行去hexo官网了解。</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure>

<ul>
<li><code>_config.yml</code> 文件存放着网站的配置信息，可以在这里配置大部分的参数。</li>
<li><code>package.json</code> 文件存放着插件信息，从中可以查看那些插件已经安装。</li>
<li><code>scaffolds</code> 是模板文件夹，新建文章时，Hexo 会根据 scaffold 来建立文件，不过这个模板和后面的主题里指的模板不一样。</li>
<li><code>source</code> 是存放用户资源的地方的文件夹，除 <code>_posts</code> 文件夹之外，开头命名为 <code>_</code> (下划线) 的文件 &#x2F; 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 <code>public</code> 文件夹（别急，等下会生成的），而其他文件会被拷贝过去。</li>
<li><code>themes</code> 主题文件夹，Hexo 会根据主题来生成静态页面，我们以后自己安装的主题也都会放在这个文件夹下面，默认的 landscape 主题已经在里面了。</li>
</ul>
</li>
<li><p><strong>Step 5:</strong> 根据 Hexo 的官方文档 <a href="https://hexo.io/zh-cn/docs/commands.html">开始使用 — 命令</a>，在终端中敲入 <code>hexo server</code> 命令（确保路径仍在 <code>your_name.github.io</code> 下），可以在 <a href="http://localhost:4000/">http://localhost:4000/</a> 中看到我们网站默认的样子了。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Hexo搭建博客</category>
      </categories>
      <tags>
        <tag>Hexo搭建博客</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/12/22/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
